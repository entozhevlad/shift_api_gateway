version: '3.8'

services:
  db:
    image: postgres:13
    environment:
      POSTGRES_DB: cft
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./initdb.d:/docker-entrypoint-initdb.d
    networks:
      - app-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - app-network

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    networks:
      - app-network

  api_gateway:
    build:
      dockerfile: Dockerfile
    depends_on:
      - kafka
      - auth_service
      - transactions_service
      - face_verification_service
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    ports:
      - "80:80"
    networks:
      - app-network

  auth_service:
    build:
      context: ./src/app/external/auth_service
      dockerfile: Dockerfile
    depends_on:
      - kafka
      - db
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - PHOTO_STORAGE_PATH=/app/photos
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@db:5432/auth_db
    volumes:
      - photos_volume:/app/photos
    ports:
      - "82:82"
    networks:
      - app-network

  transactions_service:
    build:
      context: ./src/app/external/transactions_service
      dockerfile: Dockerfile
    depends_on:
      - kafka
      - db
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@db:5432/transactions_db
    ports:
      - "83:83"
    networks:
      - app-network

  face_verification_service:
    build:
      context: ./src/app/external/face_verification_service
      dockerfile: Dockerfile
    depends_on:
      - kafka
      - db
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - PHOTO_STORAGE_PATH=/app/photos
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@db:5432/face_verification_db
    volumes:
      - photos_volume:/app/photos
    ports:
      - "84:84"
    networks:
      - app-network

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - app-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin  # Установите пароль администратора
    networks:
      - app-network


volumes:
  photos_volume:
    driver: local
  postgres_data:

networks:
  app-network:
    driver: bridge

